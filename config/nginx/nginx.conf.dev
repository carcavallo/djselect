user nginx;

worker_processes auto;
worker_rlimit_nofile 100000;


pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 4000;

    use epoll;

    multi_accept on;
}


http {
    server_names_hash_bucket_size 64;
    client_max_body_size 1G;

    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 2;

    keepalive_timeout 30;
    keepalive_requests 100000;

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    types_hash_max_size 2048;

    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_session_timeout 1d;
    ssl_session_cache shared:MySSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling off;
    ssl_stapling_verify off;

    # replace with the IP address of your resolver
    resolver 8.8.8.8;

    ##
    # Logging Settings
    ##

    #access_log /var/log/nginx/access.log combined buffer=8192 flush=10s;
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/json application/xml image/svg+xml audio/wav;
    gzip_vary on;
    gzip_comp_level 6;

    ##
    # File caching
    ##
    open_file_cache off;
    #open_file_cache max=200000 inactive=20s;
    #open_file_cache_valid 10s;
    #open_file_cache_min_uses 2;
    #open_file_cache_errors on;

    ##
    # Defaults
    ##

    server_tokens off;

    # HTTP
    server {
        listen 80;
        listen [::]:80;

        server_name localhost;

        return 301 https://$host$request_uri;
    }

    # HTTPS
    server {
        listen       443 ssl;
        listen       [::]:443 ssl;

        server_name localhost;


        location / {
            root /usr/share/nginx/html;

            proxy_pass http://localhost:4200;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_ssl_session_reuse off;
            proxy_redirect off;
        }

        location /api {
            root /usr/src/backend;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            fastcgi_pass php:9000;
            fastcgi_index index.php;

            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param CONTENT_TYPE $content_type;

            fastcgi_param CONTENT_LENGTH $content_length;

            fastcgi_param REQUEST_URI $uri;
            fastcgi_param DOCUMENT_URI $document_uri;
            fastcgi_param DOCUMENT_ROOT $document_root;
            fastcgi_param SERVER_PROTOCOL $server_protocol;
            fastcgi_param REQUEST_SCHEME $scheme;
            fastcgi_param HTTPS $https if_not_empty;

            fastcgi_param GATEWAY_INTERFACE CGI/1.1;
            fastcgi_param SERVER_SOFTWARE nginx;

            fastcgi_param REMOTE_ADDR $remote_addr;
            fastcgi_param REMOTE_PORT $remote_port;
            fastcgi_param SERVER_ADDR $server_addr;
            fastcgi_param SERVER_PORT $server_port;
            fastcgi_param SERVER_NAME $server_name;
            fastcgi_param REDIRECT_STATUS 200;

            fastcgi_buffer_size 128k;
            fastcgi_buffers 256 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_temp_file_write_size 256k;
        }

        include ssl_config;
    }
}